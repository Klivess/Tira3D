#include "../vendor/glfw3.h"
#include <vector>

enum TiraKeyPressType {
	TIRA_PRESS = 1,
	TIRA_RELEASE = 0
};
enum TiraKey {
	TIRA_NO_KEY = -1,
	TIRA_KEY_SPACE = 32,
	TIRA_KEY_APOSTROPHE = 39,  /* ' */
	TIRA_KEY_COMMA = 44,  /* , */
	TIRA_KEY_MINUS = 45,  /* - */
	TIRA_KEY_PERIOD = 46,  /* . */
	TIRA_KEY_SLASH = 47,  /* / */
	TIRA_KEY_0 = 48,
	TIRA_KEY_1 = 49,
	TIRA_KEY_2 = 50,
	TIRA_KEY_3 = 51,
	TIRA_KEY_4 = 52,
	TIRA_KEY_5 = 53,
	TIRA_KEY_6 = 54,
	TIRA_KEY_7 = 55,
	TIRA_KEY_8 = 56,
	TIRA_KEY_9 = 57,
	TIRA_KEY_SEMICOLON = 59,  /* ; */
	TIRA_KEY_EQUAL = 61,  /* = */
	TIRA_KEY_A = 65,
	TIRA_KEY_B = 66,
	TIRA_KEY_C = 67,
	TIRA_KEY_D = 68,
	TIRA_KEY_E = 69,
	TIRA_KEY_F = 70,
	TIRA_KEY_G = 71,
	TIRA_KEY_H = 72,
	TIRA_KEY_I = 73,
	TIRA_KEY_J = 74,
	TIRA_KEY_K = 75,
	TIRA_KEY_L = 76,
	TIRA_KEY_M = 77,
	TIRA_KEY_N = 78,
	TIRA_KEY_O = 79,
	TIRA_KEY_P = 80,
	TIRA_KEY_Q = 81,
	TIRA_KEY_R = 82,
	TIRA_KEY_S = 83,
	TIRA_KEY_T = 84,
	TIRA_KEY_U = 85,
	TIRA_KEY_V = 86,
	TIRA_KEY_W = 87,
	TIRA_KEY_X = 88,
	TIRA_KEY_Y = 89,
	TIRA_KEY_Z = 90,
	TIRA_KEY_LEFT_BRACKET = 91,  /* [ */
	TIRA_KEY_BACKSLASH = 92,  /* \ */
	TIRA_KEY_RIGHT_BRACKET = 93,  /* ] */
	TIRA_KEY_GRAVE_ACCENT = 96,  /* ` */
	TIRA_KEY_WORLD_1 = 161, /* non-US #1 */
	TIRA_KEY_WORLD_2 = 162, /* non-US #2 */
	/* Function keys */
	TIRA_KEY_ESCAPE = 256,
	TIRA_KEY_ENTER = 257,
	TIRA_KEY_TAB = 258,
	TIRA_KEY_BACKSPACE = 259,
	TIRA_KEY_INSERT = 260,
	TIRA_KEY_DELETE = 261,
	TIRA_KEY_RIGHT = 262,
	TIRA_KEY_LEFT = 263,
	TIRA_KEY_DOWN = 264,
	TIRA_KEY_UP = 265,
	TIRA_KEY_PAGE_UP = 266,
	TIRA_KEY_PAGE_DOWN = 267,
	TIRA_KEY_HOME = 268,
	TIRA_KEY_END = 269,
	TIRA_KEY_CAPS_LOCK = 280,
	TIRA_KEY_SCROLL_LOCK = 281,
	TIRA_KEY_NUM_LOCK = 282,
	TIRA_KEY_PRINT_SCREEN = 283,
	TIRA_KEY_PAUSE = 284,
	TIRA_KEY_F1 = 290,
	TIRA_KEY_F2 = 291,
	TIRA_KEY_F3 = 292,
	TIRA_KEY_F4 = 293,
	TIRA_KEY_F5 = 294,
	TIRA_KEY_F6 = 295,
	TIRA_KEY_F7 = 296,
	TIRA_KEY_F8 = 297,
	TIRA_KEY_F9 = 298,
	TIRA_KEY_F10 = 299,
	TIRA_KEY_F11 = 300,
	TIRA_KEY_F12 = 301,
	TIRA_KEY_F13 = 302,
	TIRA_KEY_F14 = 303,
	TIRA_KEY_F15 = 304,
	TIRA_KEY_F16 = 305,
	TIRA_KEY_F17 = 306,
	TIRA_KEY_F18 = 307,
	TIRA_KEY_F19 = 308,
	TIRA_KEY_F20 = 309,
	TIRA_KEY_F21 = 310,
	TIRA_KEY_F22 = 311,
	TIRA_KEY_F23 = 312,
	TIRA_KEY_F24 = 313,
	TIRA_KEY_F25 = 314,
	TIRA_KEY_NUMPAD_0 = 320,
	TIRA_KEY_NUMPAD_1 = 321,
	TIRA_KEY_NUMPAD_2 = 322,
	TIRA_KEY_NUMPAD_3 = 323,
	TIRA_KEY_NUMPAD_4 = 324,
	TIRA_KEY_NUMPAD_5 = 325,
	TIRA_KEY_NUMPAD_6 = 326,
	TIRA_KEY_NUMPAD_7 = 327,
	TIRA_KEY_NUMPAD_8 = 328,
	TIRA_KEY_NUMPAD_9 = 329,
	TIRA_KEY_NUMPAD_DECIMAL = 330,
	TIRA_KEY_NUMPAD_DIVIDE = 331,
	TIRA_KEY_NUMPAD_MULTIPLY = 332,
	TIRA_KEY_NUMPAD_SUBTRACT = 333,
	TIRA_KEY_NUMPAD_ADD = 334,
	TIRA_KEY_NUMPAD_ENTER = 335,
	TIRA_KEY_NUMPAD_EQUAL = 336,
	TIRA_KEY_LEFT_SHIFT = 340,
	TIRA_KEY_LEFT_CONTROL = 341,
	TIRA_KEY_LEFT_ALT = 342,
	TIRA_KEY_LEFT_SUPER = 343,
	TIRA_KEY_RIGHT_SHIFT = 344,
	TIRA_KEY_RIGHT_CONTROL = 345,
	TIRA_KEY_RIGHT_ALT = 346,
	TIRA_KEY_RIGHT_SUPER = 347,
};

typedef void (tiraInputCallback)(void);

struct RecordedTiraInputs {
	TiraKey key;
	tiraInputCallback callbackFunction;
	TiraKeyPressType triggertype;
};

#pragma once
class TiraInput
{
public:
	void RecordInput(TiraKey key, tiraInputCallback callback, TiraKeyPressType pressType = TiraKeyPressType::TIRA_PRESS);
	void StopRecordingInput(TiraKey key, TiraKeyPressType pressType = TiraKeyPressType::TIRA_PRESS);

	std::vector<RecordedTiraInputs>& GetExistingInputs();
private:
	std::vector<RecordedTiraInputs> inputs;
};

